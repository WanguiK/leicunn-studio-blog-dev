# Generated by Django 3.0.2 on 2020-04-01 20:35

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(db_index=True, max_length=50, primary_key=True, serialize=False, unique=True, verbose_name='Username')),
                ('position', models.CharField(max_length=100, null=True, verbose_name='Position')),
                ('location', models.CharField(max_length=50, null=True, verbose_name='Location')),
                ('image', models.ImageField(blank=True, upload_to='profile/', verbose_name='Profile Picture')),
                ('website', models.URLField(default='https://www.leicunnstudio.com', max_length=100)),
                ('twitter', models.URLField(default='https://www.twitter.com', max_length=100, verbose_name='Twitter')),
                ('instagram', models.URLField(default='https://www.instagram.com', max_length=100, verbose_name='Instagram')),
                ('linkedin', models.URLField(default='https://www.linkedin.com', max_length=100, verbose_name='Linkedin')),
                ('description', models.CharField(default='Write A Personal Statement', help_text='* Required: 280 Characters', max_length=280, verbose_name='About Me')),
                ('article', models.TextField(default='I am a writer at Leicunn Studio Blog.', help_text='* Required', verbose_name='Write An Article About Yourself')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(help_text='Less than 100 characters', max_length=100)),
                ('description', models.CharField(help_text='* required. Describe the content of the content in this category', max_length=280, verbose_name='Description')),
                ('slug', models.SlugField(unique=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
